//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImpostorHQ.Core.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ImpostorHQ.Core.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] AlfaSlabOne_Regular {
            get {
                object obj = ResourceManager.GetObject("AlfaSlabOne_Regular", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .header-img {
        ///    background: url(&apos;hq_header.png&apos;);
        ///    background-repeat: no-repeat;
        ///    background-size: contain;
        ///    height: 25%;
        ///    max-width: 25%;
        ///}
        ///
        ///.header {
        ///    color: white;
        ///    text-align: left;
        ///}.
        /// </summary>
        internal static string align {
            get {
                return ResourceManager.GetString("align", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] apple_touch_icon_114x114 {
            get {
                object obj = ResourceManager.GetObject("apple_touch_icon_114x114", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] apple_touch_icon_120x120 {
            get {
                object obj = ResourceManager.GetObject("apple_touch_icon_120x120", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] apple_touch_icon_144x144 {
            get {
                object obj = ResourceManager.GetObject("apple_touch_icon_144x144", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] apple_touch_icon_152x152 {
            get {
                object obj = ResourceManager.GetObject("apple_touch_icon_152x152", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] apple_touch_icon_57x57 {
            get {
                object obj = ResourceManager.GetObject("apple_touch_icon_57x57", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] apple_touch_icon_60x60 {
            get {
                object obj = ResourceManager.GetObject("apple_touch_icon_60x60", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] apple_touch_icon_72x72 {
            get {
                object obj = ResourceManager.GetObject("apple_touch_icon_72x72", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] apple_touch_icon_76x76 {
            get {
                object obj = ResourceManager.GetObject("apple_touch_icon_76x76", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Audiowide_Regular {
            get {
                object obj = ResourceManager.GetObject("Audiowide_Regular", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;use strict&quot;;
        ///
        /////curtesy of anti :) 
        ///
        ///
        /////#region Constant
        ///var delta = 0x9E3779B9;
        ///var rounds = 32;
        /////#endregion
        ///
        /////#region Final Functions
        ///function encrypt(dataStr, keyString) {
        ///    var data = getBytes(dataStr);
        ///    var keyBuffer = getKey(keyString);
        ///    var blockBuffer = new Uint32Array(2);
        ///    var blockLen = nextMultiple(data.length + 8);
        ///
        ///    var encryptionBuffer = new Uint8Array(blockLen);
        ///    var cipher = new Array();
        ///    var lenBuffer = longToBytes(data.length);
        ///    encryptionBuffer = arrayCopyTo(lenB [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string blackTea {
            get {
                return ResourceManager.GetString("blackTea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*!
        /// * Chart.js v2.8.0
        /// * https://www.chartjs.org
        /// * (c) 2019 Chart.js Contributors
        /// * Released under the MIT License
        /// */
        ///!function(t,e){&quot;object&quot;==typeof exports&amp;&amp;&quot;undefined&quot;!=typeof module?module.exports=e(function(){try{return require(&quot;moment&quot;)}catch(t){}}()):&quot;function&quot;==typeof define&amp;&amp;define.amd?define([&quot;require&quot;],function(t){return e(function(){try{return t(&quot;moment&quot;)}catch(t){}}())}):t.Chart=e(t.moment)}(this,function(t){&quot;use strict&quot;;t=t&amp;&amp;t.hasOwnProperty(&quot;default&quot;)?t.default:t;var e={rgb2hsl:i,rgb2hsv: [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string chart {
            get {
                return ResourceManager.GetString("chart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*!
        /// * chartjs-plugin-streaming v1.8.0
        /// * https://nagix.github.io/chartjs-plugin-streaming
        /// * (c) 2019 Akihiko Kusanagi
        /// * Released under the MIT license
        /// */
        ///!function(e,t){&quot;object&quot;==typeof exports&amp;&amp;&quot;undefined&quot;!=typeof module?module.exports=t(require(&quot;chart.js&quot;),require(&quot;moment&quot;)):&quot;function&quot;==typeof define&amp;&amp;define.amd?define([&quot;chart.js&quot;,&quot;moment&quot;],t):(e=e||self).ChartStreaming=t(e.Chart,e.moment)}(this,function(e,t){&quot;use strict&quot;;e=e&amp;&amp;e.hasOwnProperty(&quot;default&quot;)?e.default:e,t=t&amp;&amp;t.hasOwnProperty(&quot;default&quot;)?t. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string chart_streaming {
            get {
                return ResourceManager.GetString("chart_streaming", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] favicon {
            get {
                object obj = ResourceManager.GetObject("favicon", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] favicon_128 {
            get {
                object obj = ResourceManager.GetObject("favicon_128", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] favicon_16x16 {
            get {
                object obj = ResourceManager.GetObject("favicon_16x16", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] favicon_196x196 {
            get {
                object obj = ResourceManager.GetObject("favicon_196x196", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] favicon_32x32 {
            get {
                object obj = ResourceManager.GetObject("favicon_32x32", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] favicon_96x96 {
            get {
                object obj = ResourceManager.GetObject("favicon_96x96", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* Style the header with a grey background and some padding */
        ///.header {
        ///    overflow: hidden;
        ///    background-color: #1a242f;
        ///    padding: 10px 10px;
        ///}
        ///
        ///    /* Style the header links */
        ///    .header a {
        ///        float: left;
        ///        color: black;
        ///        text-align: center;
        ///        padding: 12px;
        ///        text-decoration: none;
        ///        font-size: 18px;
        ///        line-height: 25px;
        ///        border-radius: 4px;
        ///    }
        ///
        ///        /* Style the logo link (notice that we set the same value of line-height and font-size to  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string header {
            get {
                return ResourceManager.GetString("header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;/head&gt;
        ///&lt;div&gt;&lt;/div&gt;
        ///&lt;style&gt; 
        ///@font-face {
        ///    font-family: &apos;Audiowide&apos;;
        ///    src: url(&apos;font/Audiowide-Regular.ttf&apos;);
        ///}
        ///
        ///html,
        ///body{
        ///  margin: 0px;
        ///  overflow: hidden;
        ///}
        ///
        ///div{
        ///  position: absolute;
        ///  top: 0%;
        ///  left: 0%;
        ///  height: 100%;
        ///  width: 100%;
        ///  margin: 0px;
        ///  background: radial-gradient(circle, #240015 0%, #12000b 100%);
        ///  overflow: hidden;
        ///}
        ///
        ///.wrap{
        ///  position: absolute;
        ///  left: 50%;
        ///  top: 50%;
        ///  transform: translate(-50%, -50%);
        ///}
        ///
        ///h2{
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string html404 {
            get {
                return ResourceManager.GetString("html404", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///	&lt;head&gt;
        ///		&lt;meta charset=&quot;utf-8&quot;&gt;
        ///		&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
        ///		&lt;meta http-equiv=&quot;Permissions-Policy&quot; content=&quot;interest-cohort=()&quot;/&gt;
        ///		&lt;title&gt;ImpostorHQ&lt;/title&gt;
        ///		&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;57x57&quot; href=&quot;ico/apple-icon-57x57.png&quot;&gt;
        ///		&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;60x60&quot; href=&quot;ico/apple-icon-60x60.png&quot;&gt;
        ///		&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;72x72&quot; href=&quot;ico/apple-icon-72x72.png&quot;&gt;
        ///		&lt;link rel=&quot;apple-touch-icon&quot; sizes=&quot;76x76&quot; href=&quot;ico/ap [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string htmlClient {
            get {
                return ResourceManager.GetString("htmlClient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;use strict&quot;;
        ///var connection = null;
        ///var firstLogin = true;
        ///var loggedIn = false;
        ///var playersOnline = 0;
        ///var lobbies = 0;
        ///var cpuUsage = 0;
        ///var ramUsage = 0;
        ///var _playerchart = null;
        ///var _cpuchart = null;
        ///var _ramchart = null;
        ///
        ///var playerChart = document.getElementById(&apos;playerChart&apos;);
        ///var ctxPlayers = playerChart.getContext(&apos;2d&apos;);
        ///
        ///var cpuChart = document.getElementById(&apos;cpuChart&apos;);
        ///var ctxCpu = cpuChart.getContext(&apos;2d&apos;);
        ///
        ///var ramChart = document.getElementById(&apos;ramChart&apos;);
        ///var ctxRam = ramChart.getContext( [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string main {
            get {
                return ResourceManager.GetString("main", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function md5cycle(x, k) {
        ///var a = x[0], b = x[1], c = x[2], d = x[3];
        ///
        ///a = ff(a, b, c, d, k[0], 7, -680876936);
        ///d = ff(d, a, b, c, k[1], 12, -389564586);
        ///c = ff(c, d, a, b, k[2], 17,  606105819);
        ///b = ff(b, c, d, a, k[3], 22, -1044525330);
        ///a = ff(a, b, c, d, k[4], 7, -176418897);
        ///d = ff(d, a, b, c, k[5], 12,  1200080426);
        ///c = ff(c, d, a, b, k[6], 17, -1473231341);
        ///b = ff(b, c, d, a, k[7], 22, -45705983);
        ///a = ff(a, b, c, d, k[8], 7,  1770035416);
        ///d = ff(d, a, b, c, k[9], 12, -1958414417);
        ///c = ff(c, d, a, b, k [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string md5 {
            get {
                return ResourceManager.GetString("md5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //! moment.js
        /////! version : 2.29.1
        /////! authors : Tim Wood, Iskren Chernev, Moment.js contributors
        /////! license : MIT
        /////! momentjs.com
        ///
        ///;(function (global, factory) {
        ///    typeof exports === &apos;object&apos; &amp;&amp; typeof module !== &apos;undefined&apos; ? module.exports = factory() :
        ///    typeof define === &apos;function&apos; &amp;&amp; define.amd ? define(factory) :
        ///    global.moment = factory()
        ///}(this, (function () { &apos;use strict&apos;;
        ///
        ///    var hookCallback;
        ///
        ///    function hooks() {
        ///        return hookCallback.apply(null, arguments);
        ///    }
        ///
        ///    // This [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string moment {
            get {
                return ResourceManager.GetString("moment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] mstile_144x144 {
            get {
                object obj = ResourceManager.GetObject("mstile_144x144", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] mstile_150x150 {
            get {
                object obj = ResourceManager.GetObject("mstile_150x150", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] mstile_310x150 {
            get {
                object obj = ResourceManager.GetObject("mstile_310x150", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] mstile_310x310 {
            get {
                object obj = ResourceManager.GetObject("mstile_310x310", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] mstile_70x70 {
            get {
                object obj = ResourceManager.GetObject("mstile_70x70", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * Forced dark theme version
        /// */
        ///
        ///:root {
        ///  --background-body: #202b38;
        ///  --background: #161f27;
        ///  --background-alt: #1a242f;
        ///  --selection: #1c76c5;
        ///  --text-main: #dbdbdb;
        ///  --text-bright: #fff;
        ///  --text-muted: #a9b1ba;
        ///  --links: #41adff;
        ///  --focus: #0096bfab;
        ///  --border: #526980;
        ///  --code: #ffbe85;
        ///  --animation-duration: 0.1s;
        ///  --button-hover: #324759;
        ///  --scrollbar-thumb: var(--button-hover);
        ///  --scrollbar-thumb-hover: rgb(65, 92, 115);
        ///  --form-placeholder: #a9a9a9;
        ///  --form-text: #fff;
        ///  --vari [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string water {
            get {
                return ResourceManager.GetString("water", resourceCulture);
            }
        }
    }
}
